{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    sessionStorage.removeItem(\"token\");\n    history.push(\"/login\");\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","createBrowserHistory","history","API","create","baseURL","process","env","REACT_APP_API_URL","interceptors","response","use","error","_error$response","status","sessionStorage","removeItem","push","Promise","reject"],"sources":["C:/Users/Admin/Desktop/code/personal-finance-chatbot-full/frontend/src/services/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\nAPI.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error?.response?.status === 401) {\n      sessionStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default API;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,SAAS;AAE9C,MAAMC,OAAO,GAAGD,oBAAoB,CAAC,CAAC;AAEtC,MAAME,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;AAEFL,GAAG,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,CAAAD,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEF,QAAQ,cAAAG,eAAA,uBAAfA,eAAA,CAAiBC,MAAM,MAAK,GAAG,EAAE;IACnCC,cAAc,CAACC,UAAU,CAAC,OAAO,CAAC;IAClCd,OAAO,CAACe,IAAI,CAAC,QAAQ,CAAC;EACxB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}